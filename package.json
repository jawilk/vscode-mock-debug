{
  "name": "solana-debug",
  "displayName": "Solana Debug",
  "publisher": "bpf-wtf",
  "version": "0.44.1",
  "description": "Extension to debug solana transactions by using an lldb wasm build.",  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-mock-debug.git"
  },
  "engines": {
    "vscode": "^1.49.0"
  },
  "categories": [
    "Debuggers"
  ],
  "private": true,
  "scripts": {
    "vscode:prepublish": "yarn run package-web",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish",
    "compile-web": "webpack --devtool nosources-source-map --config ./build/web-extension.webpack.config.js",
    "watch-web": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/web-extension.webpack.config.js",
    "package-web": "webpack --mode production --config ./build/web-extension.webpack.config.js"
  },
  "dependencies": {
    "await-notify": "1.0.1",
    "path": "^0.12.7",
    "url": "^0.11.0",
    "vscode-debugadapter": "^1.42.1",
    "vscode-lldb-wasm": "file:packages/vscode-lldb-wasm"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^14.0.27",
    "@types/vscode": "^1.49.0",
    "@typescript-eslint/eslint-plugin": "^3.8.0",
    "@typescript-eslint/parser": "^3.8.0",
    "eslint": "^7.6.0",
    "exports-loader": "^3.1.0",
    "file-loader": "^6.2.0",
    "glob": "^7.1.6",
    "mocha": "^8.0.1",
    "ts-loader": "^9.2.6",
    "typescript": "4.5.4",
    "vsce": "^1.79.5",
    "vscode-debugadapter-testsupport": "^1.42.0",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  },
  "browser": "./dist/web/extension.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "workspaceTrust": {
    "request": "never"
  },
  "contributes": {
    "menus": {
      "editor/title": [
        {
          "command": "extension.solana-debug.runEditorContents",
          "when": "resourceLangId == rust",
          "group": "1_run@10"
        },
        {
          "command": "extension.solana-debug.debugEditorContents",
          "when": "resourceLangId == rust",
          "group": "1_run@20"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.solana-debug.debugEditorContents",
        "title": "Debug File",
        "icon": "$(debug-alt)"
      },
      {
        "command": "extension.solana-debug.runEditorContents",
        "title": "Run File",
        "icon": "$(play)"
      }
    ],
    "breakpoints": [
      {
        "language": "rust"
      }
    ],
    "debuggers": [
      {
        "type": "solana",
        "languages": [
          "rust"
        ],
        "label": "Solana Debug",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "solana",
            "request": "launch",
            "name": "Ask for file name",
            "program": "${file}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "Solana Debug: Launch",
            "description": "A new configuration for 'debugging' a user selected markdown file.",
            "body": {
              "type": "solana",
              "request": "launch",
              "name": "Ask for file name",
              "program": "${file}",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "AskForProgramName": "extension.solana-debug.getProgramName"
        }
      }
    ]
  }
}
